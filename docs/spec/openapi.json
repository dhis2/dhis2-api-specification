{
  "openapi": "3.0.1",
  "info": {
    "contact": {
      "email": "dev@dhis2.org",
      "x-status-dhis2": "template"
    },
    "description":
      "<!-- auto-inserted: do not edit here -->The Web API is a component which makes it possible for external systems\nto access and manipulate data stored in an instance of DHIS2. More\nprecisely, it provides a programmatic interface to a wide range of\nexposed data and service methods for applications such as third-party\nsoftware clients, web portals and internal DHIS2 modules.\n\n# Introduction\n\nThe Web API adheres to many of the principles behind the REST\narchitectural style. To mention some few and important ones:\n\n1.  The fundamental building blocks are referred to as *resources*. A\n    resource can be anything exposed to the Web, from a document to a\n    business process - anything a client might want to interact with.\n    The information aspects of a resource can be retrieved or exchanged\n    through resource *representations*. A representation is a view of a\n    resource's state at any given time. For instance, the *reportTable*\n    resource in DHIS2 represents a tabular report of aggregated data for\n    a certain set of parameters. This resource can be retrieved in a\n    variety of representation formats including HTML, PDF, and MS Excel.\n\n2.  All resources can be uniquely identified by a *URI* (also referred\n    to a/s *URL*). All resources have a default representation. You can\n    indicate that you are interested in a specific representation by\n    supplying an *Accept* HTTP header, a file extension or a *format*\n    query parameter. So in order to retrieve the PDF representation of a\n    report table you can supply a *Accept: application/pdf* header or\n    append *.pdf* or *?format=pdf* to your request URL.\n\n3.  Interactions with the API requires correct use of HTTP *methods* or\n    *verbs*. This implies that for a resource you must issue a *GET*\n    request when you want to retrieve it, *POST* request when you want\n    to create one, *PUT* when you want to update it and *DELETE* when\n    you want to remove it. So if you want to retrieve the default\n    representation of a report table you can send a GET request to e.g.\n    */reportTable/iu8j/hYgF6t*, where the last part is the report table\n    identifier.\n\n4.  Resource representations are *linkable*, meaning that\n    representations advertise other resources which are relevant to the\n    current one by embedding links into itself (please be aware that you\n    need to request *href* in your field filter to have this working.\n    This feature greatly improves the usability and robustness of the\n    API as we will see later. For instance, you can easily navigate to\n    the indicators which are associated with a report table from the\n    *reportTable* resource through the embedded links using your\n    preferred representation format.\n\nWhile all of this might sound complicated, the Web API is actually very\nsimple to use. We will proceed with a few practical examples in a\nminute.\n\n## Web API versions\n\nThe Web API is versioned starting from DHIS 2.25. The API versioning\nfollows the DHIS 2 major version numbering. As an example, the API\nversion for DHIS 2.30 is *30*.\n\nYou can access a specific API version by including the version number\nafter the */api* component, as an example like this:\n\n    /api/29/dataElements\n\nIf you omit the version part of the URL, the system will use the current\nAPI version. As an example, for DHIS 2.30, when omitting the API part,\nthe system will use API version 30. When developing API clients it is\nrecommended to use explicit API versions (rather than omitting the API\nversion), as this will protect the client from unforeseen API changes.\n\nThe last three API versions will be supported. As an example, DHIS\nversion 2.30 supports API version 28, 29 and 30.\n\nNote that the metadata model is not versioned, and that you might\nexperience changes e.g. in associations between objects. These changes\nwill be documented in the DHIS2 major version release notes.\n\n# Authentication\n\nThe DHIS2 Web API supports two protocols for authentication, Basic\nAuthentication and OAuth 2. You can verify and get information about the\ncurrently authenticated user by making a GET request to the following\nURL:\n\n    /api/26/me\n\nAnd more information about authorities (and if a user have a certain\nauthority) by using the endpoints:\n\n    /api/26/me/authorities\n    /api/26/me/authorities/ALL\n\n## Basic Authentication\n\nThe DHIS2 Web API supports *Basic authentication*. Basic authentication\nis a technique for clients to send login credentials over HTTP to a web\nserver. Technically speaking, the username is appended with a colon and\nthe password, Base64-encoded, prefixed Basic and supplied as the value\nof the *Authorization* HTTP header. More formally that is`\nAuthorization: Basic\nbase64encode(username:password)` Most network-aware development\nframeworks provides support for authentication using Basic, such as\nApache HttpClient, Spring RestTemplate and C\\# WebClient. An important\nnote is that this authentication scheme provides no security since the\nusername and password is sent in plain text and can be easily decoded.\nUsing it is recommended only if the server is using SSL/TLS (HTTPS) to\nencrypt communication between itself and the client. Consider it a hard\nrequirement to provide secure interactions with the Web API.\n\n## OAuth2\n\nDHIS2 supports the OAuth2 authentication protocol. OAuth2 is an open\nstandard for authorization which it allows third-party clients to\nconnect on behalf of a DHIS2 user and get a reusable bearer token for\nsubsequent requests to the Web API. DHIS 2 does not support fine-grained\nOAuth2 roles but rather provides applications access based on user roles\nof the DHIS2 user.\n\nEach client for which you want to allow OAuth 2 authentication must be\nregistered in DHIS2. To add a new OAuth2 client go to *Apps \\> Settings\n\\> OAuth2 Clients*, click add new and enter the desired client name and\nthe grant types.\n\n### Adding a client using the Web API\n\nAn OAuth2 client can be added through the Web API. As an example we can\nsend a payload like this:\n\n    {\n       \"name\" : \"OAuth2 Demo Client\",\n       \"cid\" : \"demo\",\n       \"secret\" : \"1e6db50c-0fee-11e5-98d0-3c15c2c6caf6\",\n       \"grantTypes\" : [\n          \"password\",\n          \"refresh_token\",\n          \"authorization_code\"\n       ],\n       \"redirectUris\" : [\n          \"http://www.example.org\"\n       ]\n    }\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    curl -X POST -H \"Content-Type: application/json\" -d @client.json \n      -u admin:district $SERVER/api/oAuth2Clients\n\nWe will use this client as the basis for our next grant type examples.\n\n### Grant type password\n\nThe simplest of all grant types is the **password** grant type. This\ngrant type is similar to basic authenticaion in the sense that it\nrequires the client to collect the users username and password. As an\nexample we can use our demo server:\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    SECRET=\"1e6db50c-0fee-11e5-98d0-3c15c2c6caf6\"\n    \n    curl -X POST -H \"Accept: application/json\" -u demo:$SECRET $SERVER/uaa/oauth/token\n    -d grant_type=password -d username=admin -d password=district\n\nThis will give you a response similar to this:\n\n    {\n       \"expires_in\" : 43175,\n       \"scope\" : \"ALL\",\n       \"access_token\" : \"07fc551c-806c-41a4-9a8c-10658bd15435\",\n       \"refresh_token\" : \"a4e4de45-4743-481d-9345-2cfe34732fcc\",\n       \"token_type\" : \"bearer\"\n    }\n\nFor now, we will concentrate on the **access\\_token**, which is what we\nwill use as our authentication (bearer) token. As an example we will get\nall data elements using our token:\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    curl -H \"Authorization: Bearer 07fc551c-806c-41a4-9a8c-10658bd15435\" $SERVER/api/26/dataElements.json\n\n### Grant type refresh\\_token\n\nIn general the access tokens have limited validity. You can have a look\nat the **expires\\_in** property of the response in the previous example\nto understand when a token expires. To get a fresh **access\\_token** you\ncan make another roundtrip to the server and use **refresh\\_token**\nwhich allows you to get an updated token without needing to ask for the\nuser credentials one more time.\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    SECRET=\"1e6db50c-0fee-11e5-98d0-3c15c2c6caf6\"\n    REFRESH_TOKEN=\"a4e4de45-4743-481d-9345-2cfe34732fcc\"\n    \n    curl -X POST -H \"Accept: application/json\" -u demo:$SECRET $SERVER/uaa/oauth/token\n    -d grant_type=refresh_token -d refresh_token=$REFRESH_TOKEN\n\nThe response will be exactly the same as when you get an token to start\nwith.\n\n### Grant type authorization\\_code\n\nAuthorized code grant type is the recommended approach if you don't want\nto store the user credentials externally. It allows DHIS2 to collect the\nusername/password directly from the user instead of the client\ncollecting them and then authenticating on behalf of the user. Please be\naware that this approach uses the **redirect\\_uris** part of the client\npayload.\n\nStep 1: Using a browser visit this URL (if you have more than one\nredirect URIs, you might want to add\n\\&redirect\\_uri=http://www.example.org) :\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    \n    $SERVER/uaa/oauth/authorize?client_id=demo&response_type=code\n\nStep 2: After the user have successfully logged in and accepted your\nclient access, it will redirect back to your redirect uri like this:\n\n    http://www.example.org/?code=XYZ\n\nStep 3: This step is similar to what we did in the password grant type,\nusing the given code, we will now ask for a access token:\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    SECRET=\"1e6db50c-0fee-11e5-98d0-3c15c2c6caf6\"\n    \n    curl -X POST -u demo:$SECRET -H \"Accept: application/json\" $SERVER/uaa/oauth/token\n      -d grant_type=authorization_code -d code=XYZ\n\n# Error and info messages\n\nThe Web API uses a consistent format for all error/warning and\ninformational messages:\n\n    {\n       \"httpStatus\" : \"Forbidden\",\n       \"message\" : \"You don't have the proper permissions to read objects of this type.\",\n       \"httpStatusCode\" : 403,\n       \"status\" : \"ERROR\"\n    }\n\nHere we can see from the message that the user tried to access a\nresource I did not have access to. It uses the http status code 403, the\nhttp status message **forbidden** and a descriptive message.\n\n<table>\n<caption>WebMessage properties</caption>\n<colgroup>\n<col width=\"13%\" />\n<col width=\"86%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>httpStatus</td>\n<td>HTTP Status message for this response, see RFC 2616 (Section 10) for more information.</td>\n</tr>\n<tr class=\"even\">\n<td>httpStatusCode</td>\n<td>HTTP Status code for this response, see RFC 2616 (Section 10) for more information.</td>\n</tr>\n<tr class=\"odd\">\n<td>status</td>\n<td>DHIS2 status, possible values are <em>OK</em> |\u00a0<em>WARNING</em> |\u00a0<em>ERROR</em>, where <strong>OK</strong> is means everything was successful, <strong>ERROR</strong> means that operation did not complete and <strong>WARNING</strong> means operation was partially successful, if there message contains a <strong>response</strong> property, please look there for more information.</td>\n</tr>\n<tr class=\"even\">\n<td>message</td>\n<td>A user friendly message telling whether the operation was a success or not.</td>\n</tr>\n<tr class=\"odd\">\n<td>devMessage</td>\n<td>A more techincal developer friendly message (not currently in use).</td>\n</tr>\n<tr class=\"even\">\n<td>response</td>\n<td>Extension point for future extension to the WebMessage format. This will be documented when it starts being used.</td>\n</tr>\n</tbody>\n</table>\n\n# Date and period format\n\nThroughout the Web API we refer to dates and periods. The date format\nis:\n\n    yyyy-MM-dd\n\nFor instance, if you want to express March 20, 2014 you must use\n*2014-03-20*.\n\nThe period format is described in the following table (also available on\nAPI endpoint */api/periodTypes*)\n\n<table style=\"width:100%;\">\n<caption>Period format</caption>\n<colgroup>\n<col width=\"24%\" />\n<col width=\"21%\" />\n<col width=\"18%\" />\n<col width=\"35%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Interval</th>\n<th>Format</th>\n<th>Example</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Day</td>\n<td><em>yyyyMMdd</em></td>\n<td>20040315</td>\n<td>March 15 2004</td>\n</tr>\n<tr class=\"even\">\n<td>Week</td>\n<td><em>yyyy</em>W<em>n</em></td>\n<td>2004W10</td>\n<td>Week 10 2004</td>\n</tr>\n<tr class=\"odd\">\n<td>Week Wednesday</td>\n<td><em>yyyy</em>WedW<em>n</em></td>\n<td>2015WedW5</td>\n<td>Week 5 with start Wednesday</td>\n</tr>\n<tr class=\"even\">\n<td>Week Thursday</td>\n<td><em>yyyy</em>ThuW<em>n</em></td>\n<td>2015ThuW6</td>\n<td>Week 6 with start Thursday</td>\n</tr>\n<tr class=\"odd\">\n<td>Week Saturday</td>\n<td><em>yyyy</em>SatW<em>n</em></td>\n<td>2015SatW7</td>\n<td>Week 7 with start Saturday</td>\n</tr>\n<tr class=\"even\">\n<td>Week Sunday</td>\n<td><em>yyyy</em>SunW<em>n</em></td>\n<td>2015SunW8</td>\n<td>Week 8 with start Sunday</td>\n</tr>\n<tr class=\"odd\">\n<td>Month</td>\n<td><em>yyyyMM</em></td>\n<td>200403</td>\n<td>March 2004</td>\n</tr>\n<tr class=\"even\">\n<td>Quarter</td>\n<td><em>yyyy</em>Q<em>n</em></td>\n<td>2004Q1</td>\n<td>January-March 2004</td>\n</tr>\n<tr class=\"odd\">\n<td>Six-month</td>\n<td><em>yyyy</em>S<em>n</em></td>\n<td>2004S1</td>\n<td>January-June 2004</td>\n</tr>\n<tr class=\"even\">\n<td>Six-month April</td>\n<td><em>yyyy</em>AprilSn</td>\n<td>2004AprilS1</td>\n<td>April-September 2004</td>\n</tr>\n<tr class=\"odd\">\n<td>Year</td>\n<td>yyyy</td>\n<td>2004</td>\n<td>2004</td>\n</tr>\n<tr class=\"even\">\n<td>Financial Year April</td>\n<td>yyyyApril</td>\n<td>2004April</td>\n<td>Apr 2004-Mar 2005</td>\n</tr>\n<tr class=\"odd\">\n<td>Financial Year July</td>\n<td>yyyyJuly</td>\n<td>2004July</td>\n<td>July 2004-June 2005</td>\n</tr>\n<tr class=\"even\">\n<td>Financial Year Oct</td>\n<td>yyyyOct</td>\n<td>2004Oct</td>\n<td>Oct 2004-Sep 2005</td>\n</tr>\n</tbody>\n</table>\n\nIn some parts of the API, like for the analytics resource, you can\nutilize relative periods in addition to fixed periods (defined above).\nThe relative periods are relative to the current date, and allows e.g.\nfor creating dynamic reports. The available relative period values are:\n\n    THIS_WEEK, LAST_WEEK, LAST_4_WEEKS, LAST_12_WEEKS, LAST_52_WEEKS,\n    THIS_MONTH, LAST_MONTH, THIS_BIMONTH, LAST_BIMONTH, THIS_QUARTER, LAST_QUARTER,\n    THIS_SIX_MONTH, LAST_SIX_MONTH, MONTHS_THIS_YEAR, QUARTERS_THIS_YEAR,\n    THIS_YEAR, MONTHS_LAST_YEAR, QUARTERS_LAST_YEAR, LAST_YEAR, LAST_5_YEARS, LAST_12_MONTHS,\n    LAST_3_MONTHS, LAST_6_BIMONTHS, LAST_4_QUARTERS, LAST_2_SIXMONTHS, THIS_FINANCIAL_YEAR,\n    LAST_FINANCIAL_YEAR, LAST_5_FINANCIAL_YEARS\n\n# Identifier schemes\n\nThis section provides an explanation of the identifier scheme concept.\nIdentifier schemes are used to map metadata objects to other metadata\nduring import, and to render metadata as part of exports. Please note\nthat not all schemes works for all web-api calls, and not not all\nschemes can be used for both input and output (this is outlined in the\nsections explaining the various Web APIs).\n\nThe full set of identifier scheme object types available are listed\nbelow, using the name of the property to use in queries:\n\n  - idScheme\n\n  - dataElementIdScheme\n\n  - categoryOptionComboIdScheme\n\n  - orgUnitIdScheme\n\n  - programIdScheme\n\n  - programStageIdScheme\n\n  - trackedEntityIdScheme\n\n  - trackedEntityAttributeIdScheme\n\nThe general idScheme applies to all types of objects. It can be\noverriden by specific object types.\n\nThe default scheme for all parameters is UID (stable DHIS 2\nidentifiers). The supported identifier schemes are described in the\ntable below.\n\n<table>\n<caption>Scheme Values</caption>\n<colgroup>\n<col width=\"14%\" />\n<col width=\"85%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Scheme</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>ID, UID</td>\n<td>Match on DHIS2 stable Identifier, this is the default id scheme.</td>\n</tr>\n<tr class=\"even\">\n<td>CODE</td>\n<td>Match on DHIS2 Code, mainly used to exchange data with an external system.</td>\n</tr>\n<tr class=\"odd\">\n<td>NAME</td>\n<td>Match on DHIS2 Name, please not that this uses what is available as <em>object.name</em>, and not the translated name. Also not that names are not always unique, and in that case they can not be used.</td>\n</tr>\n<tr class=\"even\">\n<td>ATTRIBUTE:ID</td>\n<td>Match on metadata attribute, this attribute needs to be assigned to the type you are matching on, and also that the unique property is set to <em>true</em>. The main usage of this is also to exchange data with external systems, it has some advantages over <em>CODE</em> since multiple attributes can be added, so it can be used to synchronize with more than one system.</td>\n</tr>\n</tbody>\n</table>\n\nNote that identifier schemes is not an independent feature but needs to\nbe used in combination with resources such as data value import and meta\ndata import.\n\nAs an example, to specify CODE as the general id scheme and override\nwith UID for organisation unit id scheme you can use these query\nparameters:\n\n    ?idScheme=CODE&orgUnitIdScheme=UID\n\nAs another example, to specify an attribute for the organisation unit id\nscheme, code for the data element id scheme and use the default UID id\nscheme for all other objects you can use these parameters:\n\n    ?orgUnitIdScheme=ATTRIBUTE:j38fk2dKFsG&dataElementIdScheme=CODE\n\n# Browsing the Web API\n\nThe entry point for browsing the Web API is */api/*. This resource\nprovide links to all available resources. Four resource representation\nformats are consistently available for all resources: HTML, XML, JSON\nand JSONP. Some resources will have other formats available, like MS\nExcel, PDF, CSV and PNG. To explore the API from a web browser, navigate\nto the */api/* entry point and follow the links to your desired\nresource, for instance */api/dataElements*. For all resources which\nreturn a list of elements certain query parameters can be used to modify\nthe response:\n\n<table style=\"width:100%;\">\n<caption>Query parameters</caption>\n<colgroup>\n<col width=\"11%\" />\n<col width=\"20%\" />\n<col width=\"12%\" />\n<col width=\"54%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Param</th>\n<th>Option values</th>\n<th>Default option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>paging</td>\n<td>true | false</td>\n<td>true</td>\n<td>Indicates whether to return lists of elements in pages.</td>\n</tr>\n<tr class=\"even\">\n<td>page</td>\n<td>number</td>\n<td>1</td>\n<td>Defines which page number to return.</td>\n</tr>\n<tr class=\"odd\">\n<td>pageSize</td>\n<td>number</td>\n<td>50</td>\n<td>Defines the number of elements to return for each page.</td>\n</tr>\n<tr class=\"even\">\n<td>order</td>\n<td>property:asc/iasc/desc/idesc</td>\n<td></td>\n<td>Order the output using a specified order, only properties that are both persisted and simple (no collections, idObjects etc) are supported. iasc and idesc are case insensitive sorting.</td>\n</tr>\n</tbody>\n</table>\n\nAn example of how these parameters can be used to get a full list of\ndata element groups in XML response format is:\n\n    /api/26/dataElementGroups.xml?links=false&paging=false\n\nYou can query for elements on the name property instead of returning\nfull list of elements using the *query* query variable. In this example\nwe query for all data elements with the word \"anaemia\" in the name:\n\n    /api/26/dataElements?query=anaemia\n\nYou can get specific pages and page sizes of objects like this:\n\n    /api/26/dataElements.json?page=2&pageSize=20\n\nYou can completely disable paging like this:\n\n    /api/26/indicatorGroups.json?paging=false\n\nTo order the result based on a specific property:\n\n    /api/26/indicators.json?order=shortName:desc\n\nYou can find an object based on its ID across all object types through\nthe *identifiableObjects* resource:\n\n    /api/26/identifiableObjects/<id>\n\n## Translation\n\nDHIS2 supports translations of database content, such as data elements,\nindicators and programs. All metadata objects in the Web API have\nproperties meant to be used for display / UI purposes, which includes\n*displayName*, *displayShortName* and *displayDescription*.\n\n<table>\n<caption>Translate options</caption>\n<colgroup>\n<col width=\"20%\" />\n<col width=\"16%\" />\n<col width=\"62%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Parameter</th>\n<th>Values</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>translate</td>\n<td>true | false</td>\n<td>Translate display* properties in metadata output (displayName, displayShortName, displayDescription, and displayFormName for data elements). Default value is true.</td>\n</tr>\n<tr class=\"even\">\n<td>locale</td>\n<td>Locale to use</td>\n<td>Translate metadata output using a specified locale (requires translate=true).</td>\n</tr>\n</tbody>\n</table>\n\n## Translation API\n\nThe translations for an object is rendered as part of the object itself\nin the *translations* array. Note that the *translations* array in the\nJSON/XML payloads are normally pre-filtered for you, which means they\ncan not directly be used to import/export translations (as that would\nnormally overwrite locales other than current users).\n\n*Example of data element with translation array filtered on user\nlocale:*\n\n    {\n      \"id\": \"FTRrcoaog83\",\n      \"displayName\": \"Accute French\",\n      \"translations\": [\n        {\n          \"property\": \"SHORT_NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Accute French\"\n        },\n        {\n          \"property\": \"NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Accute French\"\n        }\n      ]\n    }\n\n*Example of data element with translations turned off:*\n\n    {\n      \"id\": \"FTRrcoaog83\",\n      \"displayName\": \"Accute Flaccid Paralysis (Deaths < 5 yrs)\",\n      \"translations\": [\n        {\n          \"property\": \"FORM_NAME\",\n          \"locale\": \"en_FK\",\n          \"value\": \"aa\"\n        },\n        {\n          \"property\": \"SHORT_NAME\",\n          \"locale\": \"en_GB\",\n          \"value\": \"Accute Flaccid Paral\"\n        },\n        {\n          \"property\": \"SHORT_NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Accute French\"\n        },\n        {\n          \"property\": \"NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Accute French\"\n        },\n        {\n          \"property\": \"NAME\",\n          \"locale\": \"en_FK\",\n          \"value\": \"aa\"\n        },\n        {\n          \"property\": \"DESCRIPTION\",\n          \"locale\": \"en_FK\",\n          \"value\": \"aa\"\n        }\n      ]\n    }\n\nNote that even if you get the unfiltered result, and are using the\nappropriate type endpoint i..e */api/26/dataElements* we do not allow\nupdates, as it would be too easy to make mistakes and overwrite the\nother available locales.\n\nTo read and update translations you can use the special translations\nendpoint for each object resource. These can be accessed by **GET** or\n**PUT** on the appropriate\n*/api/26/\\<object-type\\>/\\<object-id\\>/translations* endpoint. As an\nexample, for a data element with identifier *FTRrcoaog83* you could use\n*/api/26/dataElements/FTRrcoaog83/translations* to get and update\ntranslations. The fields available are *property* with options **NAME**,\n**SHORT\\_NAME**, **DESCRIPTION**, the *locale* which supports any valid\nlocale ID and the the *value* itself.\n\n*Example of NAME property for french locale:*\n\n    {\n      \"property\": \"NAME\",\n      \"locale\": \"fr\",\n      \"value\": \"Paralysie Flasque Aigu\u00eb (D\u00e9c\u00e8s <5 ans)\"\n    }\n\nThis payload would then be added to a translation array, and sent back\nto the appropriate endpoint:\n\n    {\n      \"translations\": [\n        {\n          \"property\": \"NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Paralysie Flasque Aigu\u00eb (D\u00e9c\u00e8s <5 ans)\"\n        }\n      ]\n    }\n\nFor a an data element with ID *FTRrcoaog83* you can **PUT** this to\n*/api/26/dataElements/FTRrcoaog83/translations*. Make sure to send all\ntranslations for the specific object and not just for a single locale\n(if not you will potentially overwrite existing locales for other\nlocales).\n\n# Metadata object filter\n\nTo filter the metadata there are several filter operations that can be\napplied to the returned list of metadata. The format of the filter\nitself is straight-forward and follows the pattern\n*property:operator:value*, where *property* is the property on the\nmetadata you want to filter on, *operator* is the comparison operator\nyou want to perform and *value* is the value to check against (not all\noperators require value). Please see the *schema* section to discover\nwhich properties are available. Recursive filtering, ie. filtering on\nassociated objects or collection of objects, are supported as well.\n\n<table>\n<caption>Available Operators</caption>\n<thead>\n<tr class=\"header\">\n<th>Operator</th>\n<th>Types</th>\n<th>Value required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>eq</td>\n<td>string | boolean | integer | float | enum |\u00a0collection (checks for size) | date</td>\n<td>true</td>\n<td>Equality</td>\n</tr>\n<tr class=\"even\">\n<td>!eq</td>\n<td>string | boolean | integer | float | enum |\u00a0collection (checks for size) | date</td>\n<td>true</td>\n<td>Inequality</td>\n</tr>\n<tr class=\"odd\">\n<td>ne</td>\n<td>string | boolean | integer | float | enum |\u00a0collection (checks for size) | date</td>\n<td>true</td>\n<td>Inequality</td>\n</tr>\n<tr class=\"even\">\n<td>like</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, match anywhere</td>\n</tr>\n<tr class=\"odd\">\n<td>!like</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, not match anywhere</td>\n</tr>\n<tr class=\"even\">\n<td>$ike</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, match start</td>\n</tr>\n<tr class=\"odd\">\n<td>!$like</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, not match start</td>\n</tr>\n<tr class=\"even\">\n<td>like$</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, match end</td>\n</tr>\n<tr class=\"odd\">\n<td>!like$</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, not match end</td>\n</tr>\n<tr class=\"even\">\n<td>ilike</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, match anywhere</td>\n</tr>\n<tr class=\"odd\">\n<td>!ilike</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, not match anywhere</td>\n</tr>\n<tr class=\"even\">\n<td>$ilike</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, match start</td>\n</tr>\n<tr class=\"odd\">\n<td>!$ilike</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, not match start</td>\n</tr>\n<tr class=\"even\">\n<td>ilike$</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, match end</td>\n</tr>\n<tr class=\"odd\">\n<td>!ilike$</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, not match end</td>\n</tr>\n<tr class=\"even\">\n<td>gt</td>\n<td>string | boolean | integer | float | collection (checks for size) | date</td>\n<td>true</td>\n<td>Greater than</td>\n</tr>\n<tr class=\"odd\">\n<td>ge</td>\n<td>string | boolean | integer | float | collection (checks for size) | date</td>\n<td>true</td>\n<td>Greater than or equal</td>\n</tr>\n<tr class=\"even\">\n<td>lt</td>\n<td>string | boolean | integer | float | collection (checks for size) | date</td>\n<td>true</td>\n<td>Less than</td>\n</tr>\n<tr class=\"odd\">\n<td>le</td>\n<td>string | boolean | integer | float | collection (checks for size) | date</td>\n<td>true</td>\n<td>Less than or equal</td>\n</tr>\n<tr class=\"even\">\n<td>null</td>\n<td>all</td>\n<td>false</td>\n<td>Property is null</td>\n</tr>\n<tr class=\"odd\">\n<td>!null</td>\n<td>all</td>\n<td>false</td>\n<td>Property is not null</td>\n</tr>\n<tr class=\"even\">\n<td>empty</td>\n<td>collection</td>\n<td>false</td>\n<td>Collection is empty</td>\n</tr>\n<tr class=\"odd\">\n<td>token</td>\n<td>string</td>\n<td>true</td>\n<td>Match on multiple tokens in search property</td>\n</tr>\n<tr class=\"even\">\n<td>!token</td>\n<td>string</td>\n<td>true</td>\n<td>Not match on multiple tokens in search property</td>\n</tr>\n<tr class=\"odd\">\n<td>in</td>\n<td>string | boolean | integer | float | date</td>\n<td>true</td>\n<td>Find objects matching 1 or more values</td>\n</tr>\n<tr class=\"even\">\n<td>!in</td>\n<td>string | boolean | integer | float | date</td>\n<td>true</td>\n<td>Find objects not matching 1 or more values</td>\n</tr>\n</tbody>\n</table>\n\nOperators will be applied as logical **and** query, if you need a **or**\nquery, you can have a look at our *in* filter (also have a look at the\nsection below). The filtering mechanism allows for recursion. See below\nfor some examples.\n\nGet data elements with id property ID1 or ID2:\n\n    /api/26/dataElements?filter=id:eq:ID1&filter=id:eq:ID2\n\nGet all data elements which has the dataSet with id ID1:\n\n    /api/26/dataElements?filter=dataSetElements.dataSet.id:eq:ID1\n\nGet all data elements with aggregation operator \"sum\" and value type\n\"int\":\n\n    /api/26/dataElements.json?filter=aggregationOperator:eq:sum&filter=type:eq:int\n\nYou can do filtering within collections, e.g. to get data elements which\nare members of the \"ANC\" data element group you can use the following\nquery using the id property of the associated data element groups:\n\n    /api/26/dataElements.json?filter=dataElementGroups.id:eq:qfxEYY9xAl6\n\nSince all operators are **and** by default, you can't find a data\nelement matching more than one id, for that purpose you can use the *in*\noperator.\n\n    /api/26/dataElements.json?filter=id:in:[fbfJHSPpUQD,cYeuwXTCPkU]\n\n## Logical operators\n\nAs mentioned in the section before, the default logical operator applied\nto the filters are **AND** which means that all object filters must be\nmatched. There are however cases where you want to match on one of\nseveral filters (maybe id and code field) and in those cases it is\npossible to switch the root logical operator from **AND** to **OR**\nusing the *rootJunction* parameter.\n\nExample: Normal filtering where both id and code must match to have a\nresult returned\n\n    /api/dataElements.json?filter=id:in:[id1,id2]&filter=code:eq:code1\n\nExample: Filtering where the logical operator has been switched to OR\nand now only one of the filters must match to have a result\n    returned\n\n    /api/dataElements.json?filter=id:in:[id1,id2]&filter=code:eq:code1&rootJunction=OR\n\n# Metadata field filter\n\nIn certain situations the default views of the metadata can be too\nverbose. A client might only need a few fields from each object and want\nto remove unnecessary fields from the response. To discover which fields\nare available for each object please see the *schema* section.\n\nThe format for include/exclude is very simple and allows for infinite\nrecursion. To filter at the \"root\" level you can just use the name of\nthe field, i.e. *?fields=id,name* which would only display the *id* and\n*name* for every object. For objects that are either collections or\ncomplex objects with properties on their own you can use the format\n*?fields=id,name,dataSets\\[id,name\\]* which would return *id*, *name* of\nthe root, and the *id* and *name* of every data set on that object.\nNegation can be done with the exclamation operator, and we have a set of\npresets of field select (see below). Both XML and JSON are supported.\n\n**Example**: Get *id* and *name* on the indicators resource:\n\n    /api/26/indicators?fields=id,name\n\n**Example**: Get *id* and *name* from dataElements, and *id* and *name*\nfrom the dataSets on dataElements:\n\n    /api/26/dataElements?fields=id,name,dataSets[id,name]\n\nTo exclude a field from the output you can use the exclamation (\\!)\noperator. This is allowed anywhere in the query and will simply not\ninclude that property (as it might have been inserted in some of the\npresets).\n\nA few presets (selected fields groups) are available and can be applied\nusing the ':' operator.\n\n<table>\n<caption>Property operators</caption>\n<colgroup>\n<col width=\"25%\" />\n<col width=\"74%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>&lt;field-name&gt;</td>\n<td>Include property with name, if it exists.</td>\n</tr>\n<tr class=\"even\">\n<td>&lt;object&gt;[&lt;field-name&gt;, ...]</td>\n<td>Includes a field within either a collection (will be applied to every object in that collection), or just on a single object.</td>\n</tr>\n<tr class=\"odd\">\n<td>!&lt;field-name&gt;, &lt;object&gt;[!&lt;field-name&gt;</td>\n<td>Do not include this field name, also works inside objects/collections. Useful when you use a preset to inlude fields.</td>\n</tr>\n<tr class=\"even\">\n<td>*, &lt;object&gt;[*]</td>\n<td>Include all fields on a certain object, if applied to a collection, it will include all fields on all objects on that collection.</td>\n</tr>\n<tr class=\"odd\">\n<td>:&lt;preset&gt;</td>\n<td>Alias to select multiple fields. Three presets are currently available, see table below for descriptions.</td>\n</tr>\n</tbody>\n</table>\n\n<table>\n<caption>Field presets</caption>\n<colgroup>\n<col width=\"25%\" />\n<col width=\"74%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Preset</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>all</td>\n<td>All fields of the object</td>\n</tr>\n<tr class=\"even\">\n<td>*</td>\n<td>Alias for all</td>\n</tr>\n<tr class=\"odd\">\n<td>identifiable</td>\n<td>Includes id, name, code, created and lastUpdated fields</td>\n</tr>\n<tr class=\"even\">\n<td>nameable</td>\n<td>Includes id, name, shortName, code, description, created and lastUpdated fields</td>\n</tr>\n<tr class=\"odd\">\n<td>persisted</td>\n<td>Returns all persisted property on a object, does not take into consideration if the object is the owner of the relation.</td>\n</tr>\n<tr class=\"even\">\n<td>owner</td>\n<td>Returns all persisted property on a object where the object is the owner of all properties, this payload can be used to update through the web-api.</td>\n</tr>\n</tbody>\n</table>\n\n**Example**: Include all fields from dataSets except organisationUnits:\n\n    /api/26/dataSets?fields=:all,!organisationUnits\n\n**Example**: Include only id, name and the collection of organisation\nunits from a data set, but exclude the id from organisation\n    units:\n\n    /api/26/dataSets/BfMAe6Itzgt?fields=id,name,organisationUnits[:all,!id]\n\n**Example**: Include nameable properties from all indicators:\n\n    /api/26/indicators.json?fields=:nameable\n\n## Field transformers\n\nIn DHIS2.17 we introduced field transformers, the idea is to allow\nfurther customization of the properties on the server side.\n\n    /api/26/dataElements/ID?fields=id~rename(i),name~rename(n)\n\nThis will rename the *id* property to *i* and *name* property to *n*.\n\nMultipe transformers can be used by repeating the transformer\n    syntax:\n\n    /api/26/dataElementGroups.json?fields=id,displayName,dataElements~isNotEmpty~rename(haveDataElements)\n\n<table>\n<caption>Available Transformers</caption>\n<colgroup>\n<col width=\"33%\" />\n<col width=\"21%\" />\n<col width=\"44%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Name</th>\n<th>Arguments</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>size</td>\n<td></td>\n<td>Gives sizes of strings (length) and collections</td>\n</tr>\n<tr class=\"even\">\n<td>isEmpty</td>\n<td></td>\n<td>Is string or collection empty</td>\n</tr>\n<tr class=\"odd\">\n<td>isNotEmpty</td>\n<td></td>\n<td>Is string or collection not empty</td>\n</tr>\n<tr class=\"even\">\n<td>rename</td>\n<td>Arg1: name</td>\n<td>Renames the property name</td>\n</tr>\n<tr class=\"odd\">\n<td>paging</td>\n<td>Arg1: page,Arg2: pageSize</td>\n<td>Pages a collection, default pageSize is 50.</td>\n</tr>\n</tbody>\n</table>\n\n### Examples\n\nExamples of transformer\n    usage.\n\n    /api/26/dataElements?fields=dataSets~size\n\n    /api/26/dataElements?fields=dataSets~isEmpty\n\n    /api/26/dataElements?fields=dataSets~isNotEmpty\n\n    /api/26/dataElements/ID?fields=id~rename(i),name~rename(n)\n\n    /api/26/dataElementGroups?fields=id,displayName,dataElements~paging(1;20)\n\n\n# Metadata create, read, update, delete, validate\n\nWhile some of the web-api endpoints already contains support for CRUD\n(create, read, update, delete), from version 2.15 this is now supported\non all endpoints. It should work as you expect, and the subsections will\ngive more detailed information about create, update, and delete (read is\nalready covered elsewhere, and have been supported for a long time).\n\n## Create / update parameters\n\nThe following query parameters are available for customizing your\nrequest.\n\n<table>\n<caption>Available Query Filters</caption>\n<thead>\n<tr class=\"header\">\n<th>Param</th>\n<th>Type</th>\n<th>Required</th>\n<th>Options (default first)</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>preheatCache</td>\n<td>boolean</td>\n<td>false</td>\n<td>true | false</td>\n<td>Turn cache-map preheating on/off. This is on by default, turning this off will make initial load time for importer much shorter (but will make the import itself slower). This is mostly used for cases where you have a small XML/JSON file you want to import, and don't want to wait for cache-map preheating.</td>\n</tr>\n<tr class=\"even\">\n<td>strategy</td>\n<td>enum</td>\n<td>false</td>\n<td>CREATE_AND_UPDATE | CREATE | UPDATE | DELETE</td>\n<td>Import strategy to use, see below for more information.</td>\n</tr>\n<tr class=\"odd\">\n<td>mergeMode</td>\n<td>enum</td>\n<td>false</td>\n<td>REPLACE, MERGE</td>\n<td>Strategy for merging of objects when doing updates. REPLACE will just overwrite the propery with the new value provided, MERGE will only set the property if its not null (only if the property was provided).</td>\n</tr>\n</tbody>\n</table>\n",
    "termsOfService": "",
    "title": "DHIS2 API",
    "version": "2.30",
    "x-logo": {
      "url": "dhis2_logo.png"
    }
  },
  "servers": [
    {
      "description": "localhost",
      "url": "http://localhost:8080/api"
    },
    {
      "description": "DHIS2 demo server",
      "url": "https://play.dhis2.org/{version}/api",
      "variables": {
        "version": {
          "default": "2.30",
          "description": "DHIS 2 release version",
          "enum": ["2.29", "2.30", "dev"]
        }
      }
    }
  ],
  "externalDocs": {
    "description": "",
    "url": "https://www.dhis2.org/documentation",
    "x-status-dhis2": "draft"
  },
  "security": [
    {
      "basicAuth": []
    },
    {
      "oAuth": []
    }
  ],
  "tags": [
    {
      "description": "/",
      "name": "",
      "x-status": "draft"
    },
    {
      "description":
        "Constants are static values which can be made available to users for use in data elements and indicators. Some indicators, such as \"Couple year protection rate\" depend on constants which usually do not change over time.",
      "name": "constants",
      "x-status": "draft"
    },
    {
      "description":
        "Tracked entity instances have full CRUD (create, read, update, delete) support in the Web-API. Together with the API for enrollment most operations needed for working with tracked entity instances and programs are supported.",
      "name": "trackedEntityInstances",
      "x-status": "draft"
    }
  ],
  "x-tagGroups": [
    {
      "name": "User Management",
      "tags": []
    },
    {
      "name": "Analytics",
      "tags": ["constants"]
    },
    {
      "name": "Tracker",
      "tags": ["trackedEntityInstances"]
    }
  ],
  "paths": {
    "/constants": {
      "get": {
        "summary": "list constants",
        "parameters": [
          {
            "$ref": "#/components/parameters/query/paging"
          },
          {
            "$ref": "#/components/parameters/query/page"
          },
          {
            "$ref": "#/components/parameters/query/pageSize"
          },
          {
            "$ref": "#/components/parameters/query/order"
          },
          {
            "$ref": "#/components/parameters/filters/filter"
          },
          {
            "$ref": "#/components/parameters/filters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination",
                      "maxItems": 1,
                      "minItems": 1,
                      "readOnly": false,
                      "type": "object"
                    },
                    "constants": {
                      "items": {
                        "$ref": "#/components/schemas/constant",
                        "type": "object"
                      },
                      "maxItems": 1.7976931348623157e308,
                      "minItems": 0.0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": ["constants"]
      },
      "post": {
        "summary": "create a new constant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/constant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 201,
                  "status": "OK",
                  "response": {
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT",
                    "klass": "org.hisp.dhis.constant.Constant"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "links": {
              "getConstantById": {
                "operationId": "getConstant",
                "parameters": {
                  "id": "$response.body#/response/uid"
                }
              },
              "updateConstantById": {
                "operationId": "updateConstant",
                "parameters": {
                  "id": "$response.body#/response/uid"
                }
              },
              "deleteConstantById": {
                "operationId": "deleteConstant",
                "parameters": {
                  "id": "$response.body#/response/uid"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "description":
                  "Webmessage containing error response(s). See <a href='#section/Error-and-info-messages'>Error-and-info-messages</a>.",
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "status": "ERROR",
                  "message":
                    "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "responseType": "ObjectReport",
                    "klass": "org.hisp.dhis.constant.Constant",
                    "errorReports": [
                      {
                        "message":
                          "Property `code`\u00a0with value `string` on object string [Xjgjm7FnhB8] (Constant)\u00a0already exists on object QOnFkMZOLiD.",
                        "mainKlass": "org.hisp.dhis.constant.Constant",
                        "mainId": "QOnFkMZOLiD",
                        "errorProperty": "code",
                        "errorCode": "E5003"
                      },
                      {
                        "message":
                          "Property `shortName`\u00a0with value `string` on object string [Xjgjm7FnhB8] (Constant)\u00a0already exists on object QOnFkMZOLiD.",
                        "mainKlass": "org.hisp.dhis.constant.Constant",
                        "mainId": "QOnFkMZOLiD",
                        "errorProperty": "shortName",
                        "errorCode": "E5003"
                      }
                    ]
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "description":
                  "Webmessage containing error response(s). See <a href='#section/Error-and-info-messages'>Error-and-info-messages</a>.",
                "example": {
                  "httpStatus": "Internal Server Error",
                  "httpStatusCode": 500,
                  "status": "ERROR",
                  "message":
                    "Can not construct instance of double from String value (\"haha\"): not a valid Double value\n at [Source: org.apache.catalina.connector.CoyoteInputStream@4bc73863; line: 11, column: 9] (through reference chain: org.hisp.dhis.constant.Constant[\"value\"])"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "tags": ["constants"]
      }
    },
    "/constants/{id}": {
      "get": {
        "summary": "get a constant by ID",
        "operationId": "getConstant",
        "parameters": [
          {
            "$ref": "#/components/parameters/filters/filter"
          },
          {
            "$ref": "#/components/parameters/filters/field"
          },
          {
            "description": "unique id of the constant in the system.",
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/constant/properties/id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/constant"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "description":
                  "Webmessage containing error response(s). See <a href='#section/Error-and-info-messages'>Error-and-info-messages</a>.",
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "status": "ERROR",
                  "message": "Constant with id FuG5VuW9VB could not be found."
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "tags": ["constants"]
      },
      "put": {
        "summary": "update a constant",
        "parameters": [
          {
            "description": "unique id of the constant in the system.",
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/constant/properties/id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/constant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "status": "OK",
                  "response": {
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT",
                    "klass": "org.hisp.dhis.constant.Constant"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "description":
                  "Webmessage containing error response(s). See <a href='#section/Error-and-info-messages'>Error-and-info-messages</a>.",
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "status": "ERROR",
                  "message": "Constant with id FuG5VuW9VB could not be found."
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "description":
                  "Webmessage containing error response(s). See <a href='#section/Error-and-info-messages'>Error-and-info-messages</a>.",
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "status": "ERROR",
                  "message":
                    "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "responseType": "ObjectReport",
                    "klass": "org.hisp.dhis.constant.Constant",
                    "errorReports": [
                      {
                        "message":
                          "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Constant)\u00a0already exists on object QOnFkMZOLiD.",
                        "mainKlass": "org.hisp.dhis.constant.Constant",
                        "mainId": "QOnFkMZOLiD",
                        "errorProperty": "shortName",
                        "errorCode": "E5003"
                      }
                    ]
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "description":
                  "Webmessage containing error response(s). See <a href='#section/Error-and-info-messages'>Error-and-info-messages</a>.",
                "example": {
                  "httpStatus": "Internal Server Error",
                  "httpStatusCode": 500,
                  "status": "ERROR",
                  "message":
                    "Can not construct instance of double from String value (\"haha\"): not a valid Double value\n at [Source: org.apache.catalina.connector.CoyoteInputStream@4bc73863; line: 11, column: 9] (through reference chain: org.hisp.dhis.constant.Constant[\"value\"])"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "tags": ["constants"]
      },
      "delete": {
        "summary": "delete a constant by ID",
        "parameters": [
          {
            "description": "unique id of the constant in the system.",
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/constant/properties/id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "status": "OK",
                  "response": {
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB",
                    "klass": "org.hisp.dhis.constant.Constant"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "description":
                  "Webmessage containing error response(s). See <a href='#section/Error-and-info-messages'>Error-and-info-messages</a>.",
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "status": "ERROR",
                  "message": "Constant with id FuG5VuW9VB could not be found."
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "tags": ["constants"]
      }
    },
    "/trackedEntityInstances": {
      "get": {
        "description": "list tracked entity instances (TEIs)",
        "parameters": [
          {
            "$ref": "#/components/parameters/query/paging"
          },
          {
            "$ref": "#/components/parameters/query/page"
          },
          {
            "$ref": "#/components/parameters/query/pageSize"
          },
          {
            "$ref": "#/components/parameters/query/order"
          },
          {
            "$ref": "#/components/parameters/filters/filter"
          },
          {
            "$ref": "#/components/parameters/filters/field"
          },
          {
            "default": "",
            "description": "organisationUnit",
            "in": "query",
            "name": "ou",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "trackedEntityInstances": {
                      "items": {
                        "$ref": "#/components/schemas/trackedEntityInstance",
                        "type": "object"
                      },
                      "maxItems": 1.7976931348623157e308,
                      "minItems": 0.0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                },
                "description":
                  "Webmessage containing error response(s). See <a href='#section/Error-and-info-messages'>Error-and-info-messages</a>.",
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "status": "ERROR",
                  "message": "At least one organisation unit must be specified"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "tags": ["trackedEntityInstances"]
      },
      "post": {
        "description": "create a new tracked entity instance",
        "parameters": [
          {
            "default": "CREATE_AND_UPDATE",
            "description": "",
            "in": "query",
            "name": "strategy",
            "required": false
          }
        ],
        "requestBody": {},
        "tags": ["trackedEntityInstances"]
      }
    }
  },
  "components": {
    "callbacks": {
    },
    "parameters": {
      "query": {
        "paging": {
          "description":
            "Indicates whether to return lists of elements in pages.",
          "in": "query",
          "name": "paging",
          "schema": {
            "default": true,
            "type": "boolean"
          }
        },
        "page": {
          "description": "Defines which page number to return.",
          "in": "query",
          "name": "page",
          "schema": {
            "default": 1,
            "type": "integer"
          }
        },
        "pageSize": {
          "description":
            "Defines the number of elements to return for each page.",
          "in": "query",
          "name": "pageSize",
          "schema": {
            "default": 50,
            "type": "integer"
          }
        },
        "order": {
          "default": "",
          "description":
            "Order the output using a specified order, only properties that are both persisted and simple (no collections, idObjects etc) are supported. iasc and idesc are case insensitive sorting.",
          "in": "query",
          "name": "order",
          "schema": {
            "type": "string",
            "enum": [
              "<property>:asc",
              "<property>:iasc",
              "<property>:desc",
              "<property>:idesc"
            ]
          }
        }
      },
      "filters": {
        "filter": {
          "default": "",
          "description":
            "Apply filter operations to the returned list of metadata. See <a href='#section/Metadata-object-filter'>Metadata-object-filter</a>.",
          "in": "query",
          "name": "filter",
          "schema": {
            "type": "string",
            "format": "property>:<operator>:<value"
          }
        },
        "field": {
          "default": "",
          "description":
            "Limit the response to specific field(s). See <a href='#section/Metadata-field-filter'>Metadata-field-filter</a>.",
          "in": "query",
          "name": "field",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      },
      "constant": [
        {
          "in": "path",
          "name": "program"
        },
        {
          "default": "",
          "description": "",
          "in": "query",
          "name": "stage",
          "required": false
        },
        {
          "default": "",
          "description": "",
          "in": "query",
          "name": "startDate",
          "required": false
        },
        {
          "default": "",
          "description": "",
          "in": "query",
          "name": "endDate",
          "required": false
        }
      ]
    },
    "links": {
    },
    "requestBodies": {
    },
    "responses": {
    },
    "schemas": {
      "webmessage": {
        "properties": {
          "httpStatus": {
            "description":
              "HTTP Status message for this response, see RFC 2616 (Section 10) for more information.",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "httpStatusCode": {
            "description":
              "HTTP Status code for this response, see RFC 2616 (Section 10) for more information.",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "DHIS2 status.",
            "readOnly": true,
            "type": "string",
            "enum": ["OK", "WARNING", "ERROR"]
          },
          "message": {
            "description":
              "A user friendly message telling whether the operation was a success or not.",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "response": {
            "schema": {
              "properties": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/errorResponse"
                  }
                ]
              }
            },
            "maxItems": 1,
            "minItems": 0,
            "readOnly": true,
            "type": "object"
          }
        },
        "required": ["attribute"],
        "x-status-dhis2": "template"
      },
      "errorResponse": {
        "properties": {
          "responseType": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "klass": {
            "description": "The DHIS software class.",
            "type": "string"
          },
          "errorReports": {
            "type": "string"
          }
        },
        "x-status-dhis2": "template"
      },
      "attribute": {
        "properties": {
          "attribute": {
            "format": "uid",
            "minLength": 11,
            "maxLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "code": {
            "format": "uid",
            "maxLength": 50,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "lastUpdated": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "valueType": {
            "enum": [
              "TEXT",
              "LONG_TEXT",
              "LETTER",
              "PHONE_NUMBER",
              "EMAIL",
              "BOOLEAN",
              "TRUE_ONLY",
              "DATE",
              "DATETIME",
              "TIME",
              "NUMBER",
              "UNIT_INTERVAL",
              "PERCENTAGE",
              "INTEGER",
              "INTEGER_POSITIVE",
              "INTEGER_NEGATIVE",
              "INTEGER_ZERO_OR_POSITIVE",
              "TRACKER_ASSOCIATE",
              "USERNAME",
              "FILE_RESOURCE",
              "COORDINATE",
              "ORGANISATION_UNIT",
              "AGE",
              "URL",
              "IMAGE"
            ],
            "maxLength": 36,
            "readOnly": false,
            "type": "string"
          },
          "value": {
            "maxLength": 2147483647,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          }
        },
        "required": ["attribute","value"],
        "x-status-dhis2": "template"
      },
      "attributeValue": {
        "properties": {
          "attribute": {
            "format": "uid",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "lastUpdated": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "value": {
            "maxLength": 2147483647,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          }
        },
        "required": ["attribute"],
        "x-status-dhis2": "template"
      },
      "access": {
        "properties": {
          "read": {
            "default": true,
            "type": "boolean"
          },
          "update": {
            "default": false,
            "type": "boolean"
          },
          "externalize": {
            "default": false,
            "type": "boolean"
          },
          "delete": {
            "default": false,
            "type": "boolean"
          },
          "write": {
            "default": false,
            "type": "boolean"
          },
          "manage": {
            "default": false,
            "type": "boolean"
          }
        },
        "x-status-dhis2": "template",
        "readOnly":true
      },
      "pagination": {
        "properties": {
          "page": {
            "format": "int32",
            "minimum": 1,
            "maximum": 255,
            "readOnly": true,
            "type": "integer"
          },
          "pageCount": {
            "format": "int32",
            "minimum": 1,
            "maximum": 255,
            "readOnly": true,
            "type": "integer"
          },
          "total": {
            "description": "total number of items found by the request",
            "format": "int32",
            "minimum": 0,
            "maximum": 255,
            "readOnly": true,
            "type": "integer"
          },
          "pageSize": {
            "format": "int32",
            "minimum": 1,
            "maximum": 255,
            "readOnly": true,
            "type": "integer"
          }
        },
        "x-status-dhis2": "template"
      },
      "trackedEntityInstance": {
        "properties": {
          "access": {
            "format": "<FILLIN>",
            "maxLength": 1.7976931348623157e308,
            "minLength": 0.0,
            "readOnly": false,
            "type": "object"
          },
          "attributes": {
            "items": {
              "$ref": "#/components/schemas/attribute",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "code": {
            "format": "uid",
            "maxLength": 50,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "coordinates": {
            "format": "geolication",
            "maxLength": 2147483647,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "createdAtClient": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "deleted": {
            "format": "boolean",
            "maxLength": 255,
            "readOnly": false,
            "type": "boolean"
          },
          "displayName": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "enrollments": {
            "items": {
              "$ref": "#/components/schemas/enrollment",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "externalAccess": {
            "format": "boolean",
            "readOnly": false,
            "type": "boolean"
          },
          "favorite": {
            "format": "boolean",
            "readOnly": true,
            "type": "boolean"
          },
          "featureType": {
            "enum": ["NONE", "MULTI_POLYGON", "POLYGON", "POINT", "SYMBOL"],
            "maxLength": 50,
            "readOnly": false,
            "type": "string"
          },
          "href": {
            "format": "url",
            "maxLength": 1.7976931348623157e308,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "id": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "inactive": {
            "format": "boolean",
            "maxLength": 255,
            "readOnly": false,
            "type": "boolean"
          },
          "lastUpdated": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "lastUpdatedAtClient": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "lastUpdatedBy": {
            "format": "uid",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "name": {
            "maxLength": 2147483647.0,
            "minLength": 1.0,
            "readOnly": false,
            "type": "string"
          },
          "organisationUnit": {
            "format": "uid",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "programInstance": {
            "items": [
              {
                "format": "uid",
                "type": "string"
              },
              "minLength",
              "maxLength"
            ],
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": false,
            "type": "array"
          },
          "publicAccess": {
            "maxLength": 8.0,
            "minLength": 8.0,
            "readOnly": false,
            "type": "string"
          },
          "representative": {
            "format": "uid",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "trackedEntityAttributeValue": {
            "items": {},
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": false,
            "type": "array"
          },
          "trackedEntityType": {
            "format": "uid",
            "maxLength": 255,
            "readOnly": false,
            "type": "string"
          },
          "translation": {
            "items": {},
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "schema": {
                "$ref": "#/components/schemas/userAccess"
              }
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "schema": {
                "$ref": "#/components/schemas/userGroupAccess"
              }
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": ["organisationUnit"],
        "x-status-dhis2": "template"
      },
      "translation": {
        "properties": {
          "property": {
            "minimum": 1,
            "maximum": 255,
            "readOnly": true,
            "type": "string"
          },
          "locale": {
            "minimum": 1,
            "maximum": 255,
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "minLength": 0,
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          }
        },
        "x-status-dhis2": "template"
      },
      "user": {
        "properties": {
          "id": {
            "format": "uid",
            "minimum": 11,
            "maximum": 11,
            "readOnly": true,
            "type": "string"
          }
        },
        "x-status-dhis2": "template",
        "readOnly":true
      },
      "constant": {
        "properties": {
          "access": {
            "$ref": "#/components/schemas/access",
            "maxItems": 1,
            "minItems": 1,
            "readOnly": true,
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "$ref": "#/components/schemas/attributeValue",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "code": {
            "format": "uid",
            "maxLength": 50,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string",
            "x-unique": true
          },
          "created": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "description": {
            "maxLength": 2147483647,
            "minLength": 1.0,
            "readOnly": false,
            "type": "string"
          },
          "displayDescription": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "externalAccess": {
            "readOnly": false,
            "type": "boolean",
            "default": false
          },
          "favorite": {
            "readOnly": false,
            "type": "boolean",
            "default": false
          },
          "href": {
            "format": "uri",
            "maxLength": 1.7976931348623157e308,
            "minLength": 0.0,
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": true,
            "type": "string"
          },
          "lastUpdated": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/user",
            "maxItems": 1,
            "minItems": 1,
            "readOnly": true,
            "type": "object"
          },
          "name": {
            "maxLength": 230,
            "minLength": 1.0,
            "readOnly": false,
            "type": "string",
            "x-unique": true
          },
          "publicAccess": {
            "maxLength": 8,
            "minLength": 8.0,
            "readOnly": true,
            "type": "string"
          },
          "shortName": {
            "maxLength": 50,
            "minLength": 1.0,
            "readOnly": false,
            "type": "string",
            "x-unique": true
          },
          "displayShortName": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "translations": {
            "items": {
              "$ref": "#/components/schemas/translation",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "user": {
            "$ref": "#/components/schemas/user",
            "maxItems": 1,
            "minItems": 1,
            "readOnly": true,
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "$ref": "#/components/schemas/userAccess",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "$ref": "#/components/schemas/userGroupAccess",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "value": {
            "format": "double",
            "maximum": 2147483647,
            "minimum": 0.0,
            "default": 0.0,
            "readOnly": false,
            "type": "string"
          }
        },
        "required": ["value", "name"],
        "x-status-dhis2": "template"
      },
      "enrollment": {
        "properties": {
          "created": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "orgUnit": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "createdAtClient": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "program": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "lastUpdated": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "trackedEntityType": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "orgUnitName": {
            "readOnly": true,
            "type": "string"
          },
          "enrollmentDate": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "followup": {
            "readOnly": false,
            "type": "boolean",
            "default": false
          },
          "deleted": {
            "readOnly": false,
            "type": "boolean",
            "default": false
          },
          "incidentDate": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "ACTIVE",
              "COMPLETED",
              "CANCELLED"
            ],
            "maxLength": 50,
            "readOnly": false,
            "type": "string"
          },
          "notes": {
            "items": {
              "$ref": "#/components/schemas/note",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "attributed": {
            "items": {
              "$ref": "#/components/schemas/attribute",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/event",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [],
        "x-status-dhis2": "template"
      },
      "event": {
        "properties": {
          "dueDate": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "createdAtClient": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "program": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "event": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "programStage": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "trackedEntityInstance": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "enrollment": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "enrollmentStatus": {
            "enum": [
              "ACTIVE",
              "COMPLETED",
              "CANCELLED"
            ],
            "maxLength": 50,
            "readOnly": false,
            "type": "string"
          },
          "status": {
            "enum": [
              "ACTIVE",
              "COMPLETED",
              "VISITED",
              "SCHEDULE",
              "OVERDUE",
              "SKIPPED"
            ],
            "maxLength": 40,
            "readOnly": false,
            "type": "string"
          },
          "attributeCategoryOptions": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "lastUpdated": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "maxLength": 255,
            "readOnly": true,
            "type": "string"
          },
          "followup": {
            "readOnly": false,
            "type": "boolean",
            "default": false
          },
          "deleted": {
            "readOnly": false,
            "type": "boolean",
            "default": false
          },
          "attributeOptionCombo": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11.0,
            "readOnly": false,
            "type": "string"
          },
          "dataValues": {
            "items": {
              "$ref": "#/components/schemas/dataValue",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          },
          "notes": {
            "items": {
              "$ref": "#/components/schemas/note",
              "type": "object"
            },
            "maxItems": 1.7976931348623157e308,
            "minItems": 0.0,
            "readOnly": true,
            "type": "array"
          }

        },
        "required": [],
        "x-status-dhis2": "template"
      },
      "note": {
        "properties": {
          "access": {
            "maxLength": 255,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "userUid": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [],
        "x-status-dhis2": "template"
      },
      "dataValue": {
        "properties": {
          "access": {
            "maxLength": 255,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "userUid": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [],
        "x-status-dhis2": "template"
      },
      "userAccess": {
        "properties": {
          "access": {
            "maxLength": 255,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "userUid": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [],
        "x-status-dhis2": "template"
      },
      "userGroupAccess": {
        "properties": {
          "access": {
            "maxLength": 255,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "maxLength": 2147483647.0,
            "minLength": 0.0,
            "readOnly": false,
            "type": "string"
          },
          "userGroupUid": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [],
        "x-status-dhis2": "template"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http",
        "x-status-dhis2": "template"
      },
      "oAuth": {
        "openIdConnectUrl": "https://play.dhis2.org/api/oAuthClients",
        "type": "openIdConnect",
        "x-status-dhis2": "template"
      },
      "x-status-dhis2": "template"
    }
  }
}
